@model IEnumerable<SocialMedia.Application.Dtos.PostDto>
@using Humanizer

@{
    ViewData["Title"] = "Feed";
}

<div class="container">
    <h1 class="my-4">@ViewData["Title"]</h1>

    <p>
        <a asp-action="CreatePost" asp-controller="Post" class="btn btn-primary">Create New Post</a>
    </p>

    @if (!Model.Any())
    {
        <p>No posts yet. Be the first to create one!</p>
    }
    else
    {
        @foreach (var post in Model)
        {
            <div class="card mb-3">
                <div class="card-body">
                    @{
                        var reactionUsers = post.Reactions.Any()
                        ? string.Join(", ", post.Reactions.Select(r => $"{r.UserName} ({r.ReactionType})"))
                        : "No reactions yet";
                    }

                    <div class="d-flex justify-content-between align-items-center mb-2">
                        <h5 class="card-title mb-0">@post.AuthorfullName</h5>

                        @* ...Update and Delete not here its for testing* ... *@
                        <div>
                            <a asp-action="UpdatePost" asp-controller="Post" asp-route-postId="@post.Id" class="btn btn-sm btn-outline-secondary">Edit</a>
                            <button type="button" class="btn btn-sm btn-outline-danger delete-post-btn" data-bs-toggle="modal" data-bs-target="#deleteConfirmModal" data-postid="@post.Id">
                                Delete
                            </button>
                        </div>
                    </div>

                    <h6 class="card-subtitle mb-2 text-muted">@post.CreatedDate.Humanize()</h6>
                    <p class="card-text">@post.Content</p>

                    @if (post.Images.Any())
                    {
                        <div class="d-flex flex-wrap">
                            @foreach (var image in post.Images)
                            {
                                <img src="@image.ImagePath" class="img-thumbnail" alt="Post Image" style="max-width: 200px; margin: 5px;" />
                            }
                        </div>
                    }

                    <hr />
                    <div class="d-flex justify-content-between align-items-center">
                        <p class="card-text mb-0">
                            <small class="text-muted"
                                   data-bs-toggle="tooltip"
                                   data-bs-placement="top"
                                   title="@reactionUsers">
                                @post.ReactionCount Reactions
                            </small>
                        </p>

                        <form asp-action="AddReaction" asp-controller="Post" method="post">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="postId" value="@post.Id" />
                            <button type="submit" name="reactionType" value="Like" class="btn btn-light">👍 Like</button>
                            <button type="submit" name="reactionType" value="Love" class="btn btn-light">❤️ Love</button>
                        </form>
                    </div>
                </div>
            </div>
        }
    }
</div>

<div class="modal fade" id="deleteConfirmModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Deletion</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this post? This action cannot be undone.
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <form asp-action="DeletePost" asp-controller="Post" method="post">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="postId" id="postIdToDelete" value="" />
                    <button type="submit" class="btn btn-danger">Sure</button>
                </form>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function() {
            // Logic for the Delete Confirmation Modal
            var deleteModal = document.getElementById('deleteConfirmModal');
            deleteModal.addEventListener('show.bs.modal', function (event) {
                var button = event.relatedTarget;
                var postId = button.getAttribute('data-postid');
                var hiddenInput = deleteModal.querySelector('#postIdToDelete');
                hiddenInput.value = postId;
            });

            // Logic for the Reaction Tooltips
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });
        });
    </script>
}